publiccode-yaml-version: '0.1'
name: daf-models
releaseDate: '2018-10-08'
url: 'https://github.com/teamdigitale/daf-models'
softwareVersion: 'yes'
developmentStatus: beta
softwareType: standalone
platforms:
  - linux
usedBy:
  - Regione Toscana
tags:
  - artificial-intelligence
  - library
maintenance:
  type: internal
  contacts:
    - name: Fabio Fumarola
      email: fabiofumarola@gmail.com
legal:
  repoOwner: Team Digitale
  license: agpl
localisation:
  availableLanguages:
    - italian
it:
  anpr: 'yes'
description:
  ita:
    shortDescription: ' This project investigates the use of neural network based methods to automatically classify documents released by public administrations'
    documentation: >-
      https://github.com/teamdigitale/daf-models/blob/master/outbox-classification/README.md
    freeTags:
      - machine learning
      - document classification
      - neural networks
    longDescription: >-
      <p>This project investigates the use of neural network based methods to
      automatically classify documents released by public administrations.</p>

      <p>This is with the idea of automating the dispatching of the mail
      received by the public administrations to the appropriate office.</p>

      <p>Since the incoming mail is protected by privacy law, we provide an
      example using the outgoing mail.</p>

      <p>As case study we considered the documents published by <a
      href="http://www.regione.toscana.it/bancadati/atti/"
      rel="nofollow">Regione Toscana Atti</a>.</p>

      <p>The case study is composed by the following steps:</p>

      <ol>
        <li><a href="https://github.com/teamdigitale/daf-models/blob/master/outbox-classification/notebook/web_service_exploration">web service exploration</a>: it describe how to get data from the service</li>
        <li>document crawling: the script to crawl the documents</li>
        <li>data preprocessing: a set of jupyter notebook with data exploration and wrangling</li>
        <li>model creation: the approaches used to create the classification model.</li>
        <li>web service: how the serve the final model via rest api.</li>
      </ol>
